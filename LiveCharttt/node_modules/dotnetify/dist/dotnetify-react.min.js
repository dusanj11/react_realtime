var dotnetifyHub="undefined"==typeof dotnetifyHub?{}:dotnetifyHub;!function(a){var b=window||global;if("object"==typeof exports&&"object"==typeof module){var c=window?window.jQuery||require("./jquery-shim"):require("./jquery-shim"),d=window?window.signalR||require("./signalR-netcore"):require("./signalR-netcore");module.exports=a(c,d,b)}else"function"==typeof define&&define.amd?define(["jquery","signalR"],a):a(jQuery,b.signalR,b)}(function(a,b,c){return dotnetifyHub=a.extend(dotnetifyHub,{version:"1.1.0-beta",type:null,_init:!1}),dotnetifyHub.init=function(d,e,f){dotnetifyHub._init||(dotnetifyHub._init=!0,f=f||b,f&&f.HubConnection?(dotnetifyHub.type="netcore",Object.defineProperty(dotnetifyHub,"isConnected",{get:function(){return dotnetifyHub._connection&&2===dotnetifyHub._connection.connection.connectionState}}),dotnetifyHub=a.extend(dotnetifyHub,{hubPath:d||"/dotnetify",url:e,reconnectDelay:[2,5,10],reconnectRetry:null,_connection:null,_reconnectCount:0,_startDoneHandler:null,_startFailHandler:null,_disconnectedHandler:function(){},_stateChangedHandler:function(a){},_onDisconnected:function(){dotnetifyHub._changeState(4),dotnetifyHub._disconnectedHandler()},_changeState:function(a){1==a&&(dotnetifyHub._reconnectCount=0);var b={0:"connecting",1:"connected",2:"reconnecting",4:"disconnected",99:"terminated"};dotnetifyHub._stateChangedHandler(b[a])},_startConnection:function(a,b){var c=dotnetifyHub.url?dotnetifyHub.url+dotnetifyHub.hubPath:dotnetifyHub.hubPath,d={};Object.keys(a).forEach(function(b){d[b]=a[b]}),d.transport=b.shift(),dotnetifyHub._connection=new f.HubConnection(c,d),dotnetifyHub._connection.on("response_vm",dotnetifyHub.client.response_VM),dotnetifyHub._connection.onclose(dotnetifyHub._onDisconnected);var e=dotnetifyHub._connection.start().then(function(){dotnetifyHub._changeState(1)}).catch(function(){b.length>0?dotnetifyHub._startConnection(a,b):dotnetifyHub._onDisconnected()});return"function"==typeof dotnetifyHub._startDoneHandler&&e.then(dotnetifyHub._startDoneHandler).catch(dotnetifyHub._startFailHandler||function(){}),e},start:function(a){dotnetifyHub._startDoneHandler=null,dotnetifyHub._startFailHandler=null;var b=[0],c={webSockets:0,serverSentEvents:1,longPolling:2};a&&Array.isArray(a.transport)&&(b=a.transport.map(function(a){return c[a]}));var d=dotnetifyHub._startConnection(a,b);return{done:function(a){return dotnetifyHub._startDoneHandler=a,d.then(a).catch(function(){}),this},fail:function(a){return dotnetifyHub._startFailHandler=a,d.catch(a),this}}},disconnected:function(a){"function"==typeof a&&(dotnetifyHub._disconnectedHandler=a)},stateChanged:function(a){"function"==typeof a&&(dotnetifyHub._stateChangedHandler=a)},reconnect:function(a){if("function"==typeof a)if(!dotnetifyHub.reconnectRetry||dotnetifyHub._reconnectCount<dotnetifyHub.reconnectRetry){var b=dotnetifyHub._reconnectCount<dotnetifyHub.reconnectDelay.length?dotnetifyHub.reconnectDelay[dotnetifyHub._reconnectCount]:dotnetifyHub.reconnectDelay[dotnetifyHub.reconnectDelay.length-1];dotnetifyHub._reconnectCount++,setTimeout(function(){dotnetifyHub._changeState(2),a()},1e3*b)}else dotnetifyHub._changeState(99)},client:{},server:{dispose_VM:function(a){dotnetifyHub._connection.invoke("Dispose_VM",a)},update_VM:function(a,b){dotnetifyHub._connection.invoke("Update_VM",a,b)},request_VM:function(a,b){dotnetifyHub._connection.invoke("Request_VM",a,b)}}})):(dotnetifyHub.type="netfx",function(a,b,c){"use strict";function d(b,c){return function(){c.apply(b,a.makeArray(arguments))}}function e(b,c){var e,f,g,h,i;for(e in b)if(b.hasOwnProperty(e)){if(f=b[e],!f.hubName)continue;i=c?f.on:f.off;for(g in f.client)if(f.client.hasOwnProperty(g)){if(h=f.client[g],!a.isFunction(h))continue;i.call(f,g,d(f,h))}}}if("function"!=typeof a.signalR)throw new Error("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.");var f=a.signalR;a.hubConnection.prototype.createHubProxies=function(){var b={};return this.starting(function(){e(b,!0),this._registerSubscribedHubs()}).disconnected(function(){e(b,!1)}),b.dotNetifyHub=this.createHubProxy("dotNetifyHub"),b.dotNetifyHub.client={},b.dotNetifyHub.server={dispose_VM:function(c){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Dispose_VM"],a.makeArray(arguments)))},request_VM:function(c,d){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Request_VM"],a.makeArray(arguments)))},update_VM:function(c,d){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Update_VM"],a.makeArray(arguments)))}},b},f.hub=a.hubConnection(dotnetifyHub.hubPath,{useDefaultPath:!1}),a.extend(f,f.hub.createHubProxies())}(a,c),Object.defineProperty(dotnetifyHub,"state",{get:function(){return a.connection.hub.state},set:function(b){a.connection.hub.state=b}}),Object.defineProperty(dotnetifyHub,"client",{get:function(){return a.connection.dotNetifyHub.client}}),Object.defineProperty(dotnetifyHub,"server",{get:function(){return a.connection.dotNetifyHub.server}}),Object.defineProperty(dotnetifyHub,"isConnected",{get:function(){return a.connection.hub.state==a.signalR.connectionState.connected}}),dotnetifyHub=a.extend(dotnetifyHub,{hubPath:d||"/signalr",url:e,reconnectDelay:[2,5,10],reconnectRetry:null,_reconnectCount:0,_stateChangedHandler:function(a){},start:function(b){dotnetifyHub.url&&(a.connection.hub.url=dotnetifyHub.url);var c;return c=b?a.connection.hub.start(b):a.connection.hub.start(),c.fail(function(a){a.source&&"Error parsing negotiate response."===a.source.message&&console.warn("This client may be attempting to connect to an incompatible SignalR .NET Core server.")}),c},disconnected:function(b){return a.connection.hub.disconnected(b)},stateChanged:function(b){return dotnetifyHub._stateChangedHandler=b,a.connection.hub.stateChanged(function(a){1==a&&(dotnetifyHub._reconnectCount=0);var c={0:"connecting",1:"connected",2:"reconnecting",4:"disconnected"};b(c[a.newState])})},reconnect:function(a){if("function"==typeof a)if(!dotnetifyHub.reconnectRetry||dotnetifyHub._reconnectCount<dotnetifyHub.reconnectRetry){var b=dotnetifyHub._reconnectCount<dotnetifyHub.reconnectDelay.length?dotnetifyHub.reconnectDelay[dotnetifyHub._reconnectCount]:dotnetifyHub.reconnectDelay[dotnetifyHub.reconnectDelay.length-1];dotnetifyHub._reconnectCount++,setTimeout(function(){dotnetifyHub._stateChangedHandler("reconnecting"),a()},1e3*b)}else dotnetifyHub._stateChangedHandler("terminated")}})))},dotnetifyHub});var dotnetify="undefined"==typeof dotnetify?{}:dotnetify;!function(a){var b=window||global;if("object"==typeof exports&&"object"==typeof module){var c="undefined"!=typeof window?window.jQuery||require("./jquery-shim"):require("./jquery-shim");module.exports=a(c,b,require("./dotnetify-hub"))}else"function"==typeof define&&define.amd?define(["./jquery-shim","./dotnetify-hub"],a):a(jQuery,b,dotnetifyHub)}(function(a,b,c){function d(b,c,d){this.$vmId=b,this.$component=c,this.$vmArg=d&&d.vmArg,this.$headers=d&&d.headers,this.$exceptionHandler=d&&d.exceptionHandler,this.$requested=!1,this.$loaded=!1,this.$itemKey={};var e=d&&d.getState,f=d&&d.setState;e="function"==typeof e?e:function(){return c.state},f="function"==typeof f?f:function(a){c.setState(a)},c&&c.props&&c.props.hasOwnProperty("vmArg")&&(this.$vmArg=a.extend(this.$vmArg,c.props.vmArg)),this.State=function(a){return"undefined"==typeof a?e():f(a)};for(var g in dotnetify.react.plugins){var h=dotnetify.react.plugins[g];h.hasOwnProperty("$inject")&&h.$inject(this)}}return dotnetify=a.extend(dotnetify,{hub:c,hubOptions:{transport:["webSockets","longPolling"]},hubPath:null,hubServerUrl:null,debug:!1,debugFn:null,connectionStateHandler:null,isConnected:function(){return c.isConnected},connect:function(a,b){return dotnetify.react.connect(a,null,b)},_triggerConnectionStateEvent:function(a,b){dotnetify.debug&&console.log("SignalR: "+(b?b.message:a)),"function"==typeof dotnetify.connectionStateHandler?dotnetify.connectionStateHandler(a,b):b&&console.error(b)},_hub:null}),dotnetify.react=a.extend(dotnetify.hasOwnProperty("react")?dotnetify.react:{},{version:"1.0.5-beta",viewModels:{},plugins:{},init:function(){var a=dotnetify.react;null===dotnetify._hub&&(c.init(dotnetify.hubPath,dotnetify.hubServerUrl,dotnetify.hubLib),c.client.response_VM=function(b,d){var e=a.viewModels.hasOwnProperty(b)?a.viewModels[b]:null,f=JSON.parse(d);if(f&&f.hasOwnProperty("ExceptionType")&&f.hasOwnProperty("Message")){var g={name:f.ExceptionType,message:f.Message};if(e&&"function"==typeof e.$exceptionHandler)return e.$exceptionHandler(g);throw console.error("["+b+"] "+g.name+": "+g.message),g}e?e.$update(d):c.server.dispose_VM(b)},c.disconnected(function(){dotnetify._hub=null,c.reconnect(a.startHub)}),c.stateChanged(function(a){dotnetify._triggerConnectionStateEvent(a)})),a.startHub()},startHub:function(){var a=dotnetify.react,b=function(){for(var b in a.viewModels)a.viewModels[b].$requested||a.viewModels[b].$request()};if(null===dotnetify._hub){for(var d in a.viewModels)a.viewModels[d].$requested=!1;dotnetify._hub=c.start(dotnetify.hubOptions).done(function(){b()}).fail(function(a){dotnetify._triggerConnectionStateEvent("error",a)})}else dotnetify.isConnected()&&dotnetify._hub.done(b);return dotnetify._hub},connect:function(a,b,c){if(arguments.length<2)throw new Error("[dotNetify] Missing arguments. Usage: connect(vmId, component) ");if(arguments.length>3)throw new Error("[dotNetify] Deprecated parameters. New usage: connect(vmId, component [,{getState, setState, vmArg, headers, exceptionHandler}]) ");if(dotnetify.ssr){var e=c&&c.vmArg;return dotnetify.react.ssrConnect(a,b,e)}var f=dotnetify.react;return f.viewModels.hasOwnProperty(a)?console.error("Component is attempting to connect to an already active '"+a+"'.  If it's from a dismounted component, you must add vm.$destroy to componentWillUnmount()."):f.viewModels[a]=new d(a,b,c),f.init(),f.viewModels[a]},ssrConnect:function(c,e,f){null!=b.ssr&&b.ssr.hasOwnProperty(c)||console.error("Server-side rendering requires initial state in 'window.ssr."+c+"'.");var g=dotnetify.react,h=b.ssr[c],i=function(){return h},j=function(b){h=a.extend(h,b)},k={getState:i,setState:j,vmArg:f},l=g.viewModels[c]=new d(c,e,k);return setTimeout(function(){l.$update(JSON.stringify(b.ssr[c]))},100),l},getViewModels:function(){var a=dotnetify.react,b=[];for(var c in a.viewModels)b.push(a.viewModels[c]);return b}}),d.prototype.$destroy=function(){for(var a in dotnetify.react.plugins){var b=dotnetify.react.plugins[a];"function"==typeof b.$destroy&&b.$destroy.apply(this)}if(dotnetify.isConnected())try{c.server.dispose_VM(this.$vmId)}catch(a){dotnetify._triggerConnectionStateEvent("error",a)}delete dotnetify.react.viewModels[this.$vmId]},d.prototype.$dispatch=function(a){if(dotnetify.isConnected())try{c.server.update_VM(this.$vmId,a),dotnetify.debug&&(console.log("["+this.$vmId+"] sent> "),console.log(a),null!=dotnetify.debugFn&&dotnetify.debugFn(this.$vmId,"sent",a))}catch(a){dotnetify._triggerConnectionStateEvent("error",a)}},d.prototype.$dispatchListState=function(a){for(var b in a){var c=this.$itemKey[b];if(!c)return void console.error("["+this.$vmId+"] missing item key for '"+b+"'; add "+b+"_itemKey property to the view model.");var d=a[b];if(!d[c])return console.error("["+this.$vmId+"] couldn't dispatch data from '"+b+"' due to missing property '"+c+"'"),void console.error(d);for(var e in d)if(e!=c){var f={};f[b+".$"+d[c]+"."+e]=d[e],this.$dispatch(f)}this.$updateList(b,d)}},d.prototype.$preProcess=function(a){var b=this;for(var c in a){var d=/(.*)_add/.exec(c);if(null==d){var d=/(.*)_update/.exec(c);if(null==d){var d=/(.*)_remove/.exec(c);if(null==d){var d=/(.*)_itemKey/.exec(c);if(null==d);else{var e=d[1],f={};f[e]=a[c],b.$setItemKey(f),delete a[c]}}else{var e=d[1];if(Array.isArray(this.State()[e])){var g=this.$itemKey[e];null!=g?b.$removeList(e,function(b){return b[g]==a[c]}):console.error("["+this.$vmId+"] missing item key for '"+e+"'; add "+e+"_itemKey property to the view model.")}else console.error("["+this.$vmId+"] '"+e+"' is not found or not an array.");delete a[c]}}else{var e=d[1];Array.isArray(this.State()[e])?b.$updateList(e,a[c]):console.error("["+this.$vmId+"] '"+e+"' is not found or not an array."),delete a[c]}}else{var e=d[1];Array.isArray(this.State()[e])?b.$addList(e,a[c]):console.error("unable to resolve "+c),delete a[c]}}},d.prototype.$request=function(){dotnetify.isConnected()&&(c.server.request_VM(this.$vmId,{$vmArg:this.$vmArg,$headers:this.$headers}),this.$requested=!0)},d.prototype.$update=function(b){dotnetify.debug&&(console.log("["+this.$vmId+"] received> "),console.log(JSON.parse(b)),null!=dotnetify.debugFn&&dotnetify.debugFn(this.$vmId,"received",JSON.parse(b)));var c=JSON.parse(b);this.$preProcess(c);var d=this.State();d=a.extend({},d,c),this.State(d),this.$loaded||this.$onLoad()},d.prototype.$onLoad=function(){for(var a in dotnetify.react.plugins){var b=dotnetify.react.plugins[a];"function"==typeof b.$ready&&b.$ready.apply(this)}this.$loaded=!0},d.prototype.$setItemKey=function(a){this.$itemKey=a},d.prototype.$addList=function(a,b){var c=this.$itemKey[a];if(null!=c){if(!b.hasOwnProperty(c))return void console.error("["+this.$vmId+"] couldn't add item to '"+a+"' due to missing property '"+c+"'");var d=this.State()[a].filter(function(a){return a[c]==b[c]});if(d.length>0)return void console.error("["+this.$vmId+"] couldn't add item to '"+listName+"' because the key already exists")}var e=this.State()[a];e.push(b);var f={};f[a]=e,this.State(f)},d.prototype.$removeList=function(a,b){var c={};c[a]=this.State()[a].filter(function(a){return!b(a)}),this.State(c)},d.prototype.$updateList=function(b,c){var d=this.$itemKey[b];if(null!=d){if(!c.hasOwnProperty(d))return void console.error("["+this.$vmId+"] couldn't update item to '"+b+"' due to missing property '"+d+"'");var e={};e[b]=this.State()[b].map(function(b){return b[d]==c[d]?a.extend(b,c):b}),this.State(e)}else console.error("["+this.$vmId+"] missing item key for '"+listName+"'; add "+listName+"_itemKey property to the view model.")},dotnetify});